<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Red_cat</title>
    <description>I like FPS game. And I think I'm good at FPS games. :)
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 06 Oct 2020 11:04:50 +0900</pubDate>
    <lastBuildDate>Tue, 06 Oct 2020 11:04:50 +0900</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
      <item>
        <title>[학교 생활] 2020 대구 SW고 소프트웨어 축제</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;코로나 때문에 못할줄 알았던 교내 축제&lt;br /&gt;
나는 왜 고기를 굽는다고 해서 고기 10KG을 굽는 노예가 되었는가&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;이번에 교내 축제를 한다고 해서 우리반 친구들과 열심히 축제 준비를 하였다. 우리반은 열심히 토론하여 축제 부스에서 비빔면과 고기를 팔기로 했다.&lt;/p&gt;

&lt;p&gt;열심히 축제 물품 구매를 위해서 구매 링크를 열심히 찾았다. 찾은 결과 필요한게 고기, 비빔면, 나무 젓가락, 종이 그릇, 종이컵, 음료, 불판 등등이 있었다.
불판, 가스, 가스버너, 냄비 등 고기를 굽고 비빔면을 끓이는데 필요한 물품들은 우리반 친구가 가지고 와줬다.&lt;/p&gt;

&lt;p&gt;축제를 시작하기 전날 오후에 운동장에 미리 부스 운영을 위해 천막을 쳐놨었다. 부스 준비를 위해 필요한 물품을 가지고 미리 운동장에 가져다 놓았다.
물품을 미리 가져다 놓고 귀찮아서 거기 앉아있었는데, 해가 지면서 바람도 솔솔 불고 곤충 소리도 들려서 캠핑온 기분이었다.
그래서 앉아있었는데 선생님들이 오셔서 사진을 찍으셨다. 아래 사진은 그때 선생님이 찍으신 사진이다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;부스에 앉아있는 나와 우리반의 모습이다.
&lt;img src=&quot;https://Junhong0209.github.io/assets/img/Festival/Festival_day-1-1.jpg&quot; alt=&quot;캠핑 느낌&quot; /&gt;
전날 가져다 놓은 우리 부스 물품이다.
&lt;img src=&quot;https://Junhong0209.github.io/assets/img/Festival/Festival_day-1-2.jpg&quot; alt=&quot;부스 물품&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;전날 저녁에 친구들과 저기서 노래를 들으면서 재미있게 놀았다. 그러고 다음날 아침에 내려와서 부스 주변 정리를 하고 고기를 굽고 하기 편하게 준비를 했다.&lt;/p&gt;

&lt;p&gt;학교에서 ‘대소코인’ 을 학생들에게 1인당 10개씩 나누어 주고, 이벤트로 더 뿌렸었다. 우리 부스는 고기와 비빔면을 하기 편하게 자리 정리를 하고 쉬었다&lt;/p&gt;

&lt;p&gt;부스 정리를 해놓곤 조금 앉아서 쉬고 있다가 우리반 친구들이 내려와서 고기 좀만 구워달라 그래서 한 두줄 정도 구워서 먹었다.
&lt;del&gt;우리반 애들끼리 고기 조금 구웠다고 광역 어그로가 끌렸었다.&lt;/del&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;부스에 앉아서 쉬고 있는 모습
&lt;img src=&quot;https://Junhong0209.github.io/assets/img/Festival/Festival2.jpg&quot; alt=&quot;부스 준비&quot; /&gt;
고기먹는 우리반
&lt;img src=&quot;https://Junhong0209.github.io/assets/img/Festival/Festival1.jpg&quot; alt=&quot;모닝 고기&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;우리 부스는 고기와 비빔면, 사이다를 세트로 하여 ‘3 대소코인’ 을 받았다. 사진은 못 찍어서 없지만 저렇게 하고 한 10시 쯤부터 부스 운영을 시작했는데 7 ~ 8KG 정도가 두시간 만에 팔렸다.&lt;/p&gt;

&lt;p&gt;생각보다 인기가 많아서 고기 굽는데 힘들었다. &lt;del&gt;고기 왜 굽는다고 나대서 힘들어 죽을뻔함;; 그래도 이럴때 아니면 언제 고기 10KG 구워보겠어&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;오전에는 부스를 마감하고 쉰 후, 오후에 1시 30분 부터 다시 부스 운영을 시작했다. 하지만 남은 양이 많이 없으므로 오후에는 많이 팔지는 못했다.&lt;/p&gt;

&lt;p&gt;다 팔고 나니 우리가 번 대소코인을 세어보니 대충 350여개가 모였었다. 그러고 난뒤 우리반 애들을 불러서 다 같이 모여 고기와 비빔면을 맛있게 먹었다.&lt;/p&gt;

&lt;p&gt;다 먹고 쉬다가 한 4시 20분쯤 방송으로 부스별로 모은 대소코인을 정산하라고 했다. 가서 정산을 하는데 선배들한테 왜 이렇게 많이 가지고 왔냐고 혼났다.&lt;/p&gt;

&lt;p&gt;정산이 끝나고 우리가 모은 개수를 들었는데 386개였다. &lt;del&gt;여기에 우리반 애들이 쓰지 않은 코인도 다 모았다.&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;그러고 5시쯤부터는 몇명 모여서 학교에 음악실에서 노래를 부르고 놀았다. 참 힘든 하루였지만 재미있었다.&lt;/p&gt;
</description>
        <pubDate>Sun, 13 Sep 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/school_life/2020/09/13/SW-Festival/</link>
        <guid isPermaLink="true">http://localhost:4000/school_life/2020/09/13/SW-Festival/</guid>
        
        <category>School_Life</category>
        
        <category>축제</category>
        
        <category>고기_노예_분명_축제_이름은_소프트웨어_축제인데</category>
        
        <category>난_왜_고기만_굽고_있는가</category>
        
        
        <category>school_life</category>
        
      </item>
    
      <item>
        <title>[학교 생활] 2020 대구 SW고 교내 해커톤 대회</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;고등학교 들어와서 처음 해본 해커톤 대회&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;이번에 한 교내 해커톤 대회는 이 학교에 들어와 처음 해본 큰 대회였다. 이번 대회 주제가 “대소고 학생들에게 필요한 것”이라는 주제였다.
우리는 처음하는거라 어떤 아이디어를 낼지 곰곰히 생각해보았다. 곰곰히 생각하여 5가지의 메인 기능과 그 외의 부가 기능을 생각했다.&lt;/p&gt;

&lt;p&gt;아래는 그 기능들이다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;메인 기능
      &lt;ol&gt;
        &lt;li&gt;
          &lt;p&gt;랩실 신청 현황 (담당 선생님께 직접 찾아가 신청해야 하기 때문에)&lt;br /&gt;
 (유동적으로 랩실을 빌려 쓸 수 있다.)&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;p&gt;대소고 각 부서(자율 / 창체 동아리)마다 필요한 물품 목록 작성, 배정된 예산, 사용한 예산, 남은 예산, 담당 선생님 등을 볼 수 있다.&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;p&gt;기숙사 호실 및 룸메이트 배정 확인 (현재는 각 반에 종이로 붙이지만 웹으로 확인)&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;p&gt;학교 주변 실시간 버스 확인 (주변 버스 시간 API(?))&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;p&gt;전공별 Tip (전공별 잘하는 선배, 전공별 능력자, 한 줄 Tip)
 ex) Git Hub 프로 달기 / 괜찮은 에디터 등등&lt;/p&gt;
        &lt;/li&gt;
      &lt;/ol&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;p&gt;부가 기능&lt;/p&gt;

      &lt;p&gt;집에 갈 때까지 남은 시간&lt;/p&gt;

      &lt;p&gt;대소고 주변 날씨&lt;/p&gt;

      &lt;p&gt;대구 코로나 확진자&lt;/p&gt;

      &lt;p&gt;학교 주변 맛집 추천 &lt;del&gt;(학교 탈출시 유용함)&lt;/del&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;우리가 아이디어를 낸 것은 이게 전부였다. 저 중에서 1, 2, 5번 아이디어를 선택하여 선배들이 보고 오실 수 있도록 구인구직 판넬? 같은 것을 만들었다.&lt;/p&gt;

&lt;p&gt;선배들이 그것을 보고 우리팀에 오셔서 우리의 아이디어와 어떻게 만들었으면 좋겠는지 물어 보셨다. 우리는 우리의 아이디어와 이렇게 만들었으면 좋겠다고 열심히 말해드렸다.&lt;/p&gt;

&lt;p&gt;선배들이 우리의 설명을 들으시고는 웹과 서버가 필요하다며 만들기 시작하셨다. 그렇게 선배들이 웹과 웹 디자인, 서버를 만드시는 동안 우리는 할 것이 없어서 멀뚱 멀뚱 구경만 하고 있었다.&lt;/p&gt;

&lt;p&gt;그러다가 우리가 해야 할 것이 문득 떠올랐다. 바로 PPT 제작이었다. 선배들이 우리의 아이디어로 웹을 제작하는 동안, 우리는 PPT 템플릿을 찾아, 그것을 수정하여 우리의 PPT를 만들었다.&lt;/p&gt;

&lt;p&gt;아래의 사진은 우리가 만든 PPT 이다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;메인
&lt;img src=&quot;https://Junhong0209.github.io/assets/img/SW/2020-09-12-SW-Hackerthon-main.jpg&quot; alt=&quot;메인&quot; /&gt;&lt;br /&gt;
목차
&lt;img src=&quot;https://Junhong0209.github.io/assets/img/SW/2020-09-12-SW-Hackerthon-topic.jpg&quot; alt=&quot;목차&quot; /&gt;&lt;br /&gt;
불편한 점 1
&lt;img src=&quot;https://Junhong0209.github.io/assets/img/SW/2020-09-12-SW-Hackerthon-an-inconvenience1.png&quot; alt=&quot;불편한 점 1&quot; /&gt;&lt;br /&gt;
불편한 점 2
&lt;img src=&quot;https://Junhong0209.github.io/assets/img/SW/2020-09-12-SW-Hackerthon-an-inconvenience2.png&quot; alt=&quot;불편한 점 2&quot; /&gt;&lt;br /&gt;
메인 기능
&lt;img src=&quot;https://Junhong0209.github.io/assets/img/SW/2020-09-12-SW-Hackerthon-main-Function.png&quot; alt=&quot;메인 기능&quot; /&gt;&lt;br /&gt;
기능 1
&lt;img src=&quot;https://Junhong0209.github.io/assets/img/SW/2020-09-12-SW-Hackerthon-Function1.png&quot; alt=&quot;기능 1&quot; /&gt;&lt;br /&gt;
기능 2
&lt;img src=&quot;https://Junhong0209.github.io/assets/img/SW/2020-09-12-SW-Hackerthon-Function2.png&quot; alt=&quot;기능 2&quot; /&gt;&lt;br /&gt;
기능 3
&lt;img src=&quot;https://Junhong0209.github.io/assets/img/SW/2020-09-12-SW-Hackerthon-Function3.png&quot; alt=&quot;기능 3&quot; /&gt;&lt;br /&gt;
팀원
&lt;img src=&quot;https://Junhong0209.github.io/assets/img/SW/2020-09-12-SW-Hackerthon-member.png&quot; alt=&quot;팀원&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;del&gt;PPT 템플릿을 가지고 와서 만든거라 시간 얼마 안걸렸을거 같지만 저거 만드느라 하루 종일 걸렸다. 만드느라 죽는줄 알았다. 없는 디자인 감각까지 끌어와서 만드느라 힘들었다.&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;우리가 생각한 모든 기능이 들어가진 못했지만, 선배들이 괜찮은 아이디어만 골라서 넣었다. 그 기능들은 ‘랩실 신청 현황, 전공별 Tip’ 이다.&lt;/p&gt;

&lt;p&gt;&lt;del&gt;전공별 Tip은 우리가 생각했던 것과는 다르게 한 줄로 적는 Tip이 되었다.&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;부서 별 예산 같은 것도 넣으려고 했으나 구현이 힘들고, 일반 학생들이 잘 알 수 없기 때문에 뺐다.&lt;/p&gt;

&lt;p&gt;선배들이 디자인과 웹을 뚝딱뚝딱 만드는 것을 보곤 ‘나도 나중에 저렇게 할 수 있도록 지금 열심히 공부해야지.’ 라고 생각을 했다. 나는 디자인 감각은 전혀 없는 것 같다. 디자인을 해야 한다면 내가 하지 않고 다른 친구에게 부탁해야겠다.&lt;/p&gt;

&lt;p&gt;우리팀은 열심히 했지만 아쉽게도 동상을 탔다. 내년에는 우리가 저걸 해야한다고 생각하니 지금부터 미리미리 열심히 공부해야겠다고 생각이 되었다. 내년에는 내가 하게 된다면 엄청 열심히 할 것이다.&lt;/p&gt;
</description>
        <pubDate>Sat, 12 Sep 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/school_life/2020/09/12/SW-Hackerthon/</link>
        <guid isPermaLink="true">http://localhost:4000/school_life/2020/09/12/SW-Hackerthon/</guid>
        
        <category>School_Life</category>
        
        <category>Programming_study</category>
        
        <category>DGSW</category>
        
        <category>대소고</category>
        
        <category>교내_해커톤</category>
        
        <category>대구_SW고</category>
        
        <category>Web</category>
        
        <category>App</category>
        
        <category>Server</category>
        
        <category>Embedded</category>
        
        
        <category>school_life</category>
        
      </item>
    
      <item>
        <title>[리뷰] Do it! 자료구조와 함께 배우는 알고리즘 입문</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;이지스퍼블리싱&lt;/code&gt; 출판사의 &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;Do it! 자료구조와 함께 배우는 알고리즘 입문 : 파이썬 편(시바타 보요 저/강민 역)&quot;&lt;/code&gt;를 읽고 작성한 리뷰입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://theorydb.github.io/assets/img/review/review-book-do-it-ds-algorithm-1.png&quot; alt=&quot;표지&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;본 도서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Python을 활용한 알고리즘, 자료구조 입문서&lt;/code&gt;이다.호ㅓ&lt;/p&gt;

&lt;p&gt;[Do it! 자료구조와 함께 배우는 알고리즘 입문]은 시리즈로 간행되어 3년 전 C언어편, 2년 전 Java편에 이어 금년도에 Python편이 나왔다. 쉽게 이해할 수 있는 알고리즘 입문서로 꽤나 정평이 나있었기에 언젠가 한 번 읽어봐야 겠다 싶었는데 드디어 Python편을 처음 접하게 되었다.&lt;/p&gt;

&lt;p&gt;본 도서의 장점은 크게 2가지를 들 수 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;하나는 C, Java, Python까지 동일한 저자가 시리즈로 간행한 도서이기에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Python만이 가지는 독특한&lt;/code&gt; 문법이나 패턴을 이해하기 쉽다는 점이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;다른 입문서와는 달리 책 곳곳에 다른 언어와 어떤 점이 다른지 설명해준다는 측면이 인상적이었다. 예를 들면 타 언어에서 자주 언급되는 Call by Value, Reference 등의 개념이 Python에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Call by Object Reference&lt;/code&gt;로 사용된다는 등 차이점을 상세히 설명함으로써 다른 언어와 다른 결과에 당황하지 않고 Python에 쉽게 적응하게 해준다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;또 다른 한가지 장점은 &lt;code class=&quot;highlighter-rouge&quot;&gt;실무&lt;/code&gt;를 고려한 서적이라는 점이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;15년 간 프로그래머로 밥먹고 살면서 의외였던 점은 생각보다 학교에서 배운 알고리즘을 사용할 기회가 적었다는 점이다.&lt;/p&gt;

&lt;p&gt;물론 알고리즘은 매우 중요하다. 알고리즘 자체에 대한 중요성을 폄하하려기보다는 &lt;code class=&quot;highlighter-rouge&quot;&gt;알고리즘을 실전의 목적과 문제에 맞게 변형하여 빠른 시간내에 생산성을 높이는 실전 감각&lt;/code&gt;이 중요하다는 점을 강조하고 싶은 것이다.&lt;/p&gt;

&lt;p&gt;대부분의 입문서나 교과서는 뻔하다. 버블, 삽입, 선택, 병합, 퀵 등의 정렬과 선형, 이진, 해시 등의 검색 크게 두 파트로 정리되어있다. 거기에 링크드 리스트와 스택, 큐, 트리 등의 내용이 보태어 진다.&lt;/p&gt;

&lt;p&gt;그림으로 볼 때 어떤 방식으로 움직이고, 소스코드는 어떻고, 그리하여 시간복잡도는 어떠하다. CRUD(삽입, 검색, 수정, 삭제)별 시간복잡도가 다를 수 있으므로 상황에 맞게 골라써야 한다. 대부분의 교과서가 지금 언급한 구성에서 크게 벗어나지 않을 것이다.&lt;/p&gt;

&lt;p&gt;물론 본 도서도 대부분 위의 구성을 따르지만 앞서 언급한대로 실무에서 활용할 수 있도록 구성된 점이 차별점이다. 약 100 페이지(1/4 정도 분량)를 할애하여 1,2장 알고리즘과 자료구조의 기초를 다룬다.&lt;/p&gt;

&lt;p&gt;정수의 합을 계산하는 문제부터 소수를 나열하는 문제까지 기초적인 문제가 매우 다양한 유형으로 소개되어있다. 기초 내용이라고 무시하기 쉽지만 실전에서 수도 없이 자주 맞닥드리는 문제들이다.&lt;/p&gt;

&lt;p&gt;더불어 이런 기초에 대한 폭넓은 이해없이는 프로그램을 개발하는데 있어 생산성이 보장되지 않는다. 속도도 느린마당에 이해력이 부족하여 옆의 팀원과 대화조차 안되어 몰래 집에서 혼자 공부하는 서러움을 겪을 수도 있다.&lt;/p&gt;

&lt;p&gt;폭넓은 예제를 다루며 여러 단계의 개선 과정을 거치는데 각 과정마다 &lt;code class=&quot;highlighter-rouge&quot;&gt;개선을 시도하려는 접근 방식과 안목&lt;/code&gt;이 주옥같다. 실전에서 효율성을 위해 검토하는 방식과 동일하기 때문이다. 1, 2장이 앞에 포진되어 있어 기초를 다룬 장이라고 무시할 것이 아니라 &lt;code class=&quot;highlighter-rouge&quot;&gt;저자의 접근법&lt;/code&gt;을 잘 따라간다면 실무에서 놀랄만한 성취를 이룰 수 있다.&lt;/p&gt;

&lt;p&gt;더불어 각 과정 마다 독자가 따라오지 못하거나 이해하지 못할 경우를 대비해 &lt;code class=&quot;highlighter-rouge&quot;&gt;상세한 시각화 자료&lt;/code&gt;가 제시된다. 시각화도 저자의 관점과 생각에 따라 같은 소스 코드를 두고 비효율적으로 이해하는 선입견이 생길수 있어 주의해야 하는 부분인데 저자가 다년간 알고리즘을 &lt;code class=&quot;highlighter-rouge&quot;&gt;어떻게 시각적으로 쉽고 효율적으로 표현할 수 있을지 고민한 흔적&lt;/code&gt;이 역력히 느껴진다.&lt;/p&gt;

&lt;p&gt;아래 그림은 이진 검색 알고리즘을 구현하고 테스트하는 예제인데 구현을 넘어서 스스로의 동작 방식을 시각화하여 이해할 수 있는 형태로 프로그램을 개발한다. 스스로 구현한 프로그램의 동작 방식을 명확히 이해하는데 있어 이보다 훌륭한 방법이 있을까 싶다.
&lt;img src=&quot;https://theorydb.github.io/assets/img/review/review-book-do-it-ds-algorithm-2.png&quot; alt=&quot;이진검색&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;위에서 언급한 구체적인 장점들을 설명하고자 하나의 예시를 선정해 보았다. 2장 마지막 예제 소수 나열하기로 아래 그림은 소수를 나열하는 프로그램을 시각적으로 표현한 부분이다. 
&lt;img src=&quot;https://theorydb.github.io/assets/img/review/review-book-do-it-ds-algorithm-3.png&quot; alt=&quot;소수1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;소수는 1과 자기 자신을 제외한 나누어 떨어지는 숫자가 없다는 규칙이 있다. 예를 들어 13이 소수인지 판단하려면 2, 3, … , 12까지의 수들로 13을 나누어 떨어지는지(즉, 나머지가 0인지) 판단하면 된다.&lt;/p&gt;

&lt;p&gt;위 그림은 2 ~ 18까지 소수인지 검사하는 과정을 시각화한 그림인데 파랑색 이탤릭체로 나누어 떨어지는 숫자를 표기했고, 나누어 떨어지는 숫자가 하나라도 등장하면 소수가 아니므로 뒤의 숫자는 검사할 필요가 없다는 것을 취소선을 이용해 표기했다. 소수의 나열 과정을 이렇게 직관적으로 표현한 그림은 처음 보는 듯 하다.&lt;/p&gt;

&lt;p&gt;여기서 소개를 마쳐도 나무랄 바 없는데 아래 그림과 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;개선&lt;/code&gt;을 시도한다. 2와 3이 소수로 밝혀진 이후에는 두 숫자로 나누어 떨어지지 않는 숫자 N은 두 숫자의 곱 조합인 2 * 2 = 4, 2 * 3 = 6, 3 * 3 = 9 등의 숫자로도 나누어 떨어지지 않음을 알 수 있다. 그럼에도 4, 6, 9로 나눠 떨어지는지 검사하는 것은 비효율적이다. 
&lt;img src=&quot;https://theorydb.github.io/assets/img/review/review-book-do-it-ds-algorithm-4.png&quot; alt=&quot;소수2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;따라서 위 그림과 같이 찾아낸 소수를 특정 배열에 저장한 후 해당 수들로만 나눗셈을 하여 나눠 떨어지는지 파악하면 된다.&lt;/p&gt;

&lt;p&gt;여기서 &lt;code class=&quot;highlighter-rouge&quot;&gt;한단계 더&lt;/code&gt; 나아간다. 아래 그림과 같이 5 * 20과 20 * 5는 대칭 구조를 이룬다. 즉, 특정 수 N이 정사각형의 면적이라 생각하여 한변의 길이로 나누어 떨어지지 않으면 나머지 변의 길이로도 나눠 떨어지지 않음에 착안한다.
&lt;img src=&quot;https://theorydb.github.io/assets/img/review/review-book-do-it-ds-algorithm-5.png&quot; alt=&quot;소수3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;즉, 위 그림의 네모박스와 같이 N 제곱근 이하의 어떤 소수로도 나눠떨어지지 않는다면 소수라고 할 수 있는 것이다.&lt;/p&gt;

&lt;p&gt;이렇듯 작은 알고리즘 문제 하나에 있어서도 여러 개선점을 찾고자 노력하고 그 과정을 쉽게 이해할 수 있게 시각적으로 도식화 한 구성이 매력적인 도서라 할 수 있겠다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;3장 이후 이어지는 알고리즘의 핵심 부분도 이러한 기조를 이어나간다. 선형 검색을 개선하기 위해 보초법으로 if문을 제거하는 방법 등 지속적인 알고리즘의 개선 시도는 물론, 이진 검색부터는 데이터가 정렬되어 있어야 한다는 등 &lt;code class=&quot;highlighter-rouge&quot;&gt;전제 조건&lt;/code&gt; 등이 명확히 언급된다.&lt;/p&gt;

&lt;p&gt;시간복잡도를 설명하는데 있어서도 O(n)의 의미가 n과의 비례 관계를 의미한다는 점과 연속 동작에서의 시간복잡도는 Max 복잡도를 기준으로 함을 분명히 한다. 그동안 만났던 알고리즘 입문서는 이런 핵심에 대한 설명이 누락되어 괜히 이해를 어렵게 하였는데 이런 &lt;code class=&quot;highlighter-rouge&quot;&gt;명쾌&lt;/code&gt;한 점이 본 도서의 장점이다.&lt;/p&gt;

&lt;p&gt;각 알고리즘별 &lt;code class=&quot;highlighter-rouge&quot;&gt;Trade-Off&lt;/code&gt; 관계를 언급함으로써 실전에서 고려해야 할 사항들에 대한 판단을 돕기도 하며, 알고리즘을 이해하고자 밑바닥부터 구현하긴 하지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;실전에서는 어떤 라이브러리&lt;/code&gt;를 활용하면 되는지 안내된다. 예를 들면 스택의 경우 collection.deque를, 큐에서는 heapq 모듈을 활용할 수 있음을 알려준다.&lt;/p&gt;

&lt;p&gt;재귀 파트야 말로 본 도서의 시각화 자료의 활용이 얼마나 빛을 발하는지 알 수 있는 대목이다. 재귀는 직관적으로 사고하기 어려워 시각화 자료가 정말 중요한 파트인데 각 재귀 흐름 단계별 명쾌한 시각화 자료로 로직이 쉽게 이해된다. 본 도서에서는 다루지 않지만 차후 &lt;code class=&quot;highlighter-rouge&quot;&gt;Dynamic Programming&lt;/code&gt;을 배우는데 있어서 튼튼한 기초를 마련할 수 있을 것이다.&lt;/p&gt;

&lt;p&gt;정렬 파트 역시 주요 9개 알고리즘을 꼼꼼하게 다루고 있으며 단순 삽입 정렬이 선택 정렬과 비교해 어떤 차이점이 있는지 - 값이 가장 작은 원소를 선택하지 않는다 등 - 언급된 것을 보며 디테일에 적잖이 놀랐다. 학부 시절 둘다 삽입인데 이름은 한쪽만 삽입이라 해메였던 기억이 떠올랐다. 작은 부분 하나까지 입문 독자를 위한 &lt;code class=&quot;highlighter-rouge&quot;&gt;배려&lt;/code&gt;가 느껴졌다.&lt;/p&gt;

&lt;p&gt;문자열 검색 파트도 비교적 자세히 다뤘기에 차후 AI 진영의 NLP를 익힐 때 큰 도움이 될 만큼 기초를 다지는데 도움이 되며, 특히 리스트 부분은 링크드 리스트는 물론 &lt;code class=&quot;highlighter-rouge&quot;&gt;확장 버전별로 매우 상세히&lt;/code&gt; 다뤄 처음 접하는 독자들도 쉽게 이해할 수 있게 구성되어 있다.&lt;/p&gt;

&lt;p&gt;개인적으로 검색, 정렬, 트리 등의 알고리즘이야 라이브러리가 잘 되어있어 활용에 있어서 만큼은 큰 중요성을 느끼지 못했는데, 리스트의 경우 알아두면 실전에서 사용자 정의 알고리즘에 있어 유사한 형태가 자주 활용되기에 실전적인 알고리즘이라 생각한다. 역시 실전에 도움되는 구성답게 상당한 지면을 할애한다.&lt;/p&gt;

&lt;p&gt;마지막으로 트리는 기본적인 종류만 다루고 있어 약간 아쉬움이 남았다. AVL, red-black, B, B+, 2-3 tree 등 다양한 트리가 소개되지 않아 파일 구조나 데이터베이스에 관심이 깊은 독자분들은 다소 부족함을 느낄 수 있다.&lt;/p&gt;

&lt;p&gt;더불어 Python의 포인터를 다루는 부분의 설명이 다소 부족하여 포인터 개념에 익숙치 않은 독자들은 관련 부분에 어려움을 느낄 수 있다. 하지만 어디까지나 본 도서는 입문서이므로 입문서 기준으로는 나무랄 부분은 없어 보인다.&lt;/p&gt;

&lt;p&gt;전반적으로 책의 장점으로 비추어 볼 때 C나 Java와 같은 다른 언어에 이미 익숙하지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;Python을 처음&lt;/code&gt; 접하시는 분들께 매우 유용할 것이라 생각된다.&lt;/p&gt;

&lt;p&gt;더불어 알고리즘을 알고는 있지만 아직 &lt;code class=&quot;highlighter-rouge&quot;&gt;명쾌&lt;/code&gt;하게 이해하지 못하는 분 또한 본 도서가 큰 도움을 줄 수 있으리라 본다. 알고리즘을 이미 명확하게 숙지하고 있음에도 실전에서 새로운 알고리즘을 개발할 때 방향을 잡기 어렵거나 속도가 나지 않는 분들은 &lt;code class=&quot;highlighter-rouge&quot;&gt;실전 감각&lt;/code&gt;을 키우는 데 도움이 될 것이다.&lt;/p&gt;

&lt;p&gt;그 외에도 알고리즘을 처음 접하는 분이나 Python을 배우고 싶은 분께도 추천하고 싶다. 어떤 레퍼런스보다도 쉽게 이해하고 실전에 빠르게 적용할 수 있기 때문이다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.yes24.com/Product/Goods/91219874?OzSrank=1&quot;&gt;책소개 - Do it! 자료구조와 함께 배우는 알고리즘 입문 : 파이썬 편&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 27 Jul 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/review/2020/07/27/review-book-do-it-ds-algorithm/</link>
        <guid isPermaLink="true">http://localhost:4000/review/2020/07/27/review-book-do-it-ds-algorithm/</guid>
        
        <category>review</category>
        
        <category>book</category>
        
        <category>python</category>
        
        <category>자료구조</category>
        
        <category>알고리즘</category>
        
        <category>do</category>
        
        <category>it</category>
        
        <category>테스트</category>
        
        <category>면접</category>
        
        <category>입문서</category>
        
        <category>취업</category>
        
        
        <category>review</category>
        
      </item>
    
  </channel>
</rss>
